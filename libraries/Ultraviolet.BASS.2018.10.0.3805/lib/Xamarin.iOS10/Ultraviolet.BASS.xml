<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ultraviolet.BASS</name>
    </assembly>
    <members>
        <member name="T:Ultraviolet.BASS.Audio.BASSMediaImporter">
            <summary>
            Imports .mp3, .ogg, and .wav files.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSMediaImporter.Import(Ultraviolet.Content.IContentImporterMetadata,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSong">
            <summary>
            Represents the BASS implementation of the Song class.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.#ctor(Ultraviolet.UltravioletContext,System.String)">
            <summary>
            Initializes a new instance of the BASSSong class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="file">The path to the file from which to stream the song.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.CreateStream(System.UInt32)">
            <summary>
            Creates a BASS stream that represents the song.
            </summary>
            <param name="flags">The flags to apply to the stream that is created.</param>
            <returns>The handle to the BASS stream that was created.</returns>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSong.Tags">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSong.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSong.Artist">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSong.Album">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSong.Duration">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.GetDuration(System.UInt32)">
            <summary>
            Gets the duration of the specified stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.GetTags(System.UInt32,System.String@,System.String@,System.String@)">
            <summary>
            Reads any supported tags which are contained by the specified stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.ReadID3TagsFromStream(System.UInt32,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Attempts to read ID3 tags from the specified stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.ReadOggTagsFromStream(System.UInt32,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Attempts to read OGG tags from the specified stream.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager">
            <summary>
            Manages stream instances for the <see cref="T:Ultraviolet.BASS.Audio.BASSSong"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager"/> class.
            </summary>
            <param name="file">The name of the file that contains the song data.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.Dispose">
            <summary>
            Releases resources associated with the object.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.CreateInstance(System.UInt32)">
            <summary>
            Creates a BASS stream that represents the song.
            </summary>
            <param name="flags">The flags to apply to the stream that is created.</param>
            <returns>The handle to the BASS stream that was created.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing"><see langword="true"/> if the object is being disposed; <see langword="false"/> if the object is being finalized.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.StreamClose(System.IntPtr)">
            <summary>
            Closes an instance stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.StreamLength(System.IntPtr)">
            <summary>
            Retrieves the length of an instance stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.StreamRead(System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
            Reads from an instance stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSong.BASSSongInstanceManager.StreamSeek(System.UInt64,System.IntPtr)">
            <summary>
            Seeks an instance stream.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSongPlayer">
            <summary>
            Represents the BASS implementation of the <see cref="T:Ultraviolet.Audio.SongPlayer"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.BASS.Audio.BASSSongPlayer"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Ultraviolet#Core#Messages#IMessageSubscriber{Ultraviolet#UltravioletMessageID}#ReceiveMessage(Ultraviolet.UltravioletMessageID,Ultraviolet.Core.Messages.MessageData)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Update(Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Play(Ultraviolet.Audio.Song,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Play(Ultraviolet.Audio.Song,System.TimeSpan,System.Nullable{System.TimeSpan})">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Play(Ultraviolet.Audio.Song,System.Single,System.Single,System.Single,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Play(Ultraviolet.Audio.Song,System.Single,System.Single,System.Single,System.TimeSpan,System.Nullable{System.TimeSpan})">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Stop">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Pause">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Resume">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.SlideVolume(System.Single,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.SlidePitch(System.Single,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.SlidePan(System.Single,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.State">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.IsPlaying">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.IsLooping">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.Position">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.Duration">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.Volume">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.Pitch">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSongPlayer.Pan">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.SyncLoopThunk(System.UInt32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Performs custom looping when a loop range is specified.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.SyncEndThunk(System.UInt32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Raises a callback when a song ends.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.PlayInternal(Ultraviolet.Audio.Song,System.Single,System.Single,System.Single,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Plays the specified song.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.StopInternal">
            <summary>
            Releases the memory associated with the underlying stream object.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.IsChannelValid">
            <summary>
            Gets a value indicating whether the channel is in a valid state.
            </summary>
            <returns>true if the channel is in a valid state; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.EnsureChannelIsValid">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> if the channel is not in a valid state.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongPlayer.SyncEnd(System.UInt32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Raises a callback when a song ends.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSongProcessor">
            <summary>
            Loads song assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSongProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSoundEffect">
            <summary>
            Represents the BASS implementation of the <see cref="T:Ultraviolet.Audio.SoundEffect"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffect.#ctor(Ultraviolet.UltravioletContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.BASS.Audio.BASSSoundEffect"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="filename">The filename of the sample to load.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffect.GetSampleInfo(System.IntPtr@,Ultraviolet.BASS.Native.BASS_SAMPLE@)">
            <summary>
            Gets the sound effect's sample information.
            </summary>
            <param name="data">The sound effect's raw PCM sample data.</param>
            <param name="info">The sound effect's sample info.</param>
            <returns>The handle to the sound effect's BASS sample.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffect.Play">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffect.Play(System.Single,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffect.Duration">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffect.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer">
            <summary>
            Represents the BASS implementation of the <see cref="T:Ultraviolet.Audio.SoundEffectPlayer"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Ultraviolet#Core#Messages#IMessageSubscriber{Ultraviolet#UltravioletMessageID}#ReceiveMessage(Ultraviolet.UltravioletMessageID,Ultraviolet.Core.Messages.MessageData)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Update(Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Play(Ultraviolet.Audio.SoundEffect,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Play(Ultraviolet.Audio.SoundEffect,System.Single,System.Single,System.Single,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Stop">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Pause">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Resume">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.SlideVolume(System.Single,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.SlidePitch(System.Single,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.SlidePan(System.Single,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.State">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.IsPlaying">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.IsLooping">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Position">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Duration">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Volume">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Pitch">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Pan">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.IsHandleValid">
            <summary>
            Gets a value indicating whether the channel is in a valid state.
            </summary>
            <returns>true if the channel is in a valid state; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.PlayInternal(Ultraviolet.Audio.SoundEffect,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Plays a sound effect.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.StopInternal">
            <summary>
            Releases any BASS resources being held by the player.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.PromoteToStream(System.Single)">
            <summary>
            Promotes the current channel to a stream.  
            This is necessary if the pitch is shifted, because BASS_FX only works on streams.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectPlayer.PromoteToStream(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Promotes the current channel to a stream.  
            This is necessary if the pitch is shifted, because BASS_FX only works on streams.
            </summary>
            <param name="volume">The stream's initial volume.</param>
            <param name="pitch">The stream's initial pitch.</param>
            <param name="pan">The stream's initial pan.</param>
            <param name="loop">A value indicating whether to loop the stream.</param>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSSoundEffectProcessor">
            <summary>
            Loads sound effect assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSSoundEffectProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice">
            <summary>
            Represents the BASS implementation of the <see cref="T:Ultraviolet.Audio.IUltravioletAudioDevice"/> interface.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice.#ctor(Ultraviolet.UltravioletContext,System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="id">The device's BASS identifier.</param>
            <param name="name">The device's name.</param>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice.ID">
            <summary>
            Gets the device's BASS identifier.
            </summary>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice.IsDefault">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.Audio.BASSUltravioletAudioDevice.IsValid">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.BASS.Audio.BASSUtil">
            <summary>
            Contains methods for manipulating BASS resources.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.IsValidHandle(System.UInt32)">
            <summary>
            Gets a value indicating whether the specified value is a valid resource handle.
            </summary>
            <param name="handle">The handle to evaluate.</param>
            <returns>true if the specified value is a valid resource handle; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.IsValidValue(System.UInt32)">
            <summary>
            Gets a value indicating whether the specified value is a valid return value.
            </summary>
            <param name="value">The value to evaluate.</param>
            <returns>true if the specified value is a valid return value; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.IsValidValue(System.UInt64)">
            <summary>
            Gets a value indicating whether the specified value is a valid return value.
            </summary>
            <param name="value">The value to evaluate.</param>
            <returns>true if the specified value is a valid return value; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetDurationInSeconds(System.UInt32)">
            <summary>
            Gets the duration of the specified channel in seconds.
            </summary>
            <param name="handle">The handle of the channel to evaluate.</param>
            <returns>The duration of the specified channel in seconds.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetPositionInSeconds(System.UInt32)">
            <summary>
            Gets the position of the specified channel.
            </summary>
            <param name="handle">The handle of the channel to evaluate.</param>
            <returns>The current position of the channel in seconds.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetDurationAsTimeSpan(System.UInt32)">
            <summary>
            Gets the duration of the specified channel as a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="handle">The handle of the channel to evaluate.</param>
            <returns>The duration of the specified channel.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetPositionAsTimeSpan(System.UInt32)">
            <summary>
            Gets the position of the specified channel as a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="handle">The handle of the channel to evaluate.</param>
            <returns>The current position of the channel.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SetPositionInSeconds(System.UInt32,System.Double)">
            <summary>
            Sets the position of the specified channel.
            </summary>
            <param name="handle">The handle of the channel to modify.</param>
            <param name="position">The position in seconds to which to set the channel.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetIsLooping(System.UInt32)">
            <summary>
            Gets a value indicating whether the specified channel is looping.
            </summary>
            <param name="handle">The handle of the channel to evaluate.</param>
            <returns>true if the channel is looping; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SetIsLooping(System.UInt32,System.Boolean)">
            <summary>
            Sets a value indicating whether the specified channel is looping.
            </summary>
            <param name="handle">The handle of the channel to modify.</param>
            <param name="looping">A value indicating whether the channel is looping.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetVolume(System.UInt32)">
            <summary>
            Gets the volume of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to evaluate.</param>
            <returns>The channel's volume.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SetVolume(System.UInt32,System.Single)">
            <summary>
            Sets the volume of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to adjust.</param>
            <param name="volume">The channel's new volume./</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetPitch(System.UInt32)">
            <summary>
            Gets the pitch of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to evaluate.</param>
            <returns>The channel's pitch.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SetPitch(System.UInt32,System.Single)">
            <summary>
            Sets the pitch of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to adjust.</param>
            <param name="pitch">The channel's new pitch.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.GetPan(System.UInt32)">
            <summary>
            Gets the pan of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to evaluate.</param>
            <returns>The channel's pan.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SetPan(System.UInt32,System.Single)">
            <summary>
            Sets the pan of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to adjust.</param>
            <param name="pan">The channel's new pan.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SlideVolume(System.UInt32,System.Single,System.TimeSpan)">
            <summary>
            Slides the volume of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to slide.</param>
            <param name="volume">The channel's new volume./</param>
            <param name="time">The time over which to perform the slide.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SlidePitch(System.UInt32,System.Single,System.TimeSpan)">
            <summary>
            Slides the pitch of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to slide.</param>
            <param name="pitch">The channel's new pitch.</param>
            <param name="time">The time over which to perform the slide.</param>
        </member>
        <member name="M:Ultraviolet.BASS.Audio.BASSUtil.SlidePan(System.UInt32,System.Single,System.TimeSpan)">
            <summary>
            Slides the pan of the specified channel.
            </summary>
            <param name="handle">The handle that represents the channel to slide.</param>
            <param name="pan">The channel's new pan.</param>
            <param name="time">The time over which to perform the slide.</param>
        </member>
        <member name="F:Ultraviolet.BASS.Audio.BASSUtil.SemitonesPerOctave">
            <summary>
            The number of semitones in one octave.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.BASSException">
            <summary>
            Represents an exception thrown as a result of a BASS API error.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSException.#ctor">
            <summary>
            Initializes a new instance of the BASSException class.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the BASSException class.
            </summary>
            <param name="code">The BASS error code.</param>
        </member>
        <member name="M:Ultraviolet.BASS.BASSException.GetExceptionMessage">
            <summary>
            Gets the exception message for the current error code.
            </summary>
            <returns>The exception message for the current error code.</returns>
        </member>
        <member name="M:Ultraviolet.BASS.BASSException.GetExceptionMessage(System.Int32)">
            <summary>
            Gets the exception message for the current error code.
            </summary>
            <returns>The exception message for the current error code.</returns>
        </member>
        <member name="T:Ultraviolet.BASS.BASSStrings">
            <summary>
            Contains the implementation's string resources.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSStrings.#cctor">
            <summary>
            Initializes the BASSStrings type.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.BASSUltravioletAudio">
            <summary>
            Represents the BASS implementation of the Ultraviolet audio subsystem.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the BASSUltravioletAudio class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.Ultraviolet#Core#Messages#IMessageSubscriber{Ultraviolet#UltravioletMessageID}#ReceiveMessage(Ultraviolet.UltravioletMessageID,Ultraviolet.Core.Messages.MessageData)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.EnumerateAudioDevices">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.FindAudioDeviceByName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.Update(Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.Suspend">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.Resume">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.PlaybackDevice">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.AudioMasterVolume">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.SongsMasterVolume">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.SoundEffectsMasterVolume">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.AudioMuted">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.SongsMuted">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.BASS.BASSUltravioletAudio.SoundEffectsMuted">
            <inheritdoc/>
        </member>
        <member name="E:Ultraviolet.BASS.BASSUltravioletAudio.Updating">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.OnUpdating(Ultraviolet.UltravioletTime)">
            <summary>
            Raises the Updating event.
            </summary>
            <param name="time">Time elapsed since the last call to Update.</param>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.UpdateStreamVolume">
            <summary>
            Updates the global volume of streams to match the subsystem's current settings.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.UpdateSampleVolume">
            <summary>
            Updates the global volume of samples to match the subsystem's current settings.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.UpdateAudioDevices">
            <summary>
            Updates the list of audio devices.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletAudio.GetDefaultDevice">
            <summary>
            Gets the default audio device.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.BASSUltravioletFactoryInitializer">
            <summary>
            Initializes factory methods for the BASS implementation of the audio subsystem.
            </summary>
        </member>
        <member name="M:Ultraviolet.BASS.BASSUltravioletFactoryInitializer.Initialize(Ultraviolet.UltravioletContext,Ultraviolet.UltravioletFactory)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.BASS.BASSUltravioletMessages">
            <summary>
            Contains the implementation's Ultraviolet engine events.
            </summary>
        </member>
        <member name="F:Ultraviolet.BASS.BASSUltravioletMessages.BASSDeviceChanged">
            <summary>
            An event indicating that the current BASS device has changed.
            </summary>
        </member>
        <member name="T:Ultraviolet.BASS.Messages.BASSDeviceChangedMessageData">
            <summary>
            Represents the data for an event which indicates that the BASS device has changed.
            </summary>
        </member>
        <member name="P:Ultraviolet.BASS.Messages.BASSDeviceChangedMessageData.DeviceID">
            <summary>
            Gets or sets the identifier of the new device.
            </summary>
        </member>
    </members>
</doc>
