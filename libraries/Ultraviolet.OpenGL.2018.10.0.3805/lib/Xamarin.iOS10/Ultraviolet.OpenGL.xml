<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ultraviolet.OpenGL</name>
    </assembly>
    <members>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedBlendColor">
            <summary>
            Represents the cached value of GL_BLEND_COLOR.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedBlendEquation">
            <summary>
            Represents the cached value of a blend equation.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedBlendFunction">
            <summary>
            Represents the cached value of a blend function.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedCapability">
            <summary>
            Represents the cached value of a capability which is enabled by glEnable().
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedClearColor">
            <summary>
            Represents the cached value of GL_COLOR_CLEAR_VALUE.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedClearDepth">
            <summary>
            Represents the cached value of GL_DEPTH_CLEAR_VALUE.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedStencilMask">
            <summary>
            Represents the cached value of GL_STENCIL_WRITEMASK.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedClearStencil">
            <summary>
            Represents the cached value of GL_STENCIL_CLEAR_VALUE.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedColorMask">
            <summary>
            Represents the cached value of GL_COLOR_WRITEMASK.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedCulledFace">
            <summary>
            Represents the cached value of GL_CULL_FACE_MODE.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedDepthFunc">
            <summary>
            Represents the cached value of GL_DEPTH_FUNC.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedDepthMask">
            <summary>
            Represents the cached value of GL_DEPTH_WRITEMASK.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedFrontFace">
            <summary>
            Represents the cached value of GL_FRONT_FACE.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedPolygonMode">
            <summary>
            Represents the cached polygon rasterization mode values.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedPolygonOffset">
            <summary>
            Represents the cached polygon offset values.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedStencilFunc">
            <summary>
            Represents the cached value of a stencil function.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Caching.CachedStencilOp">
            <summary>
            Represents the cached value of a stencil operation.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.EffectDescription">
            <summary>
            Represents a description of an effect.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectDescription.Parameters">
            <summary>
            Gets the list of parameters exposed by the effect.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectDescription.Techniques">
            <summary>
            Gets the list of techniques exposed by the effect.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.EffectTechniqueDescription">
            <summary>
            Represents a description of an effect technique.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectTechniqueDescription.Name">
            <summary>
            Gets the effect technique's name.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectTechniqueDescription.Passes">
            <summary>
            Gets the list of passes exposed by the technique.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.EffectPassDescription">
            <summary>
            Represents a description of an effect pass.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectPassDescription.Name">
            <summary>
            Gets the effect pass' name.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectPassDescription.Stages">
            <summary>
            Gets the effect stages included in this pass.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.EffectStagesDescription">
            <summary>
            Represents the stages of an effect pass.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectStagesDescription.VertexShader">
            <summary>
            Gets the asset path of the vertex shader relative to the effect file.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectStagesDescription.VertexShaderES">
            <summary>
            Gets the asset path of the ES vertex shader relative to the effect file.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectStagesDescription.FragmentShader">
            <summary>
            Gets the asset path of the fragment shader relative to the effect file.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectStagesDescription.FragmentShaderES">
            <summary>
            Gets the asset path of the ES fragment shader relative to the effect file.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.EffectImplementationProcessor`1">
            <summary>
            Represents the base class for effect implementation processors.
            </summary>
            <typeparam name="TInput">The type of input being processed.</typeparam>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.EffectImplementationProcessor`1.Externs">
            <summary>
            Gets or sets the collection of externs which are provided to the effect upon compilation.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.EffectImplementationProcessor`1.GetShaderForCurrentPlatform(System.String,System.String)">
            <summary>
            Gets the version of the specified shader which is appropriate for the current platform.
            </summary>
            <param name="glShader">The desktop OpenGL shader.</param>
            <param name="esShader">The OpenGL ES shader.</param>
            <returns>The appropriate shader for the current platform.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteBatchEffect">
            <summary>
            Represents the OpenGL implementation of the sprite batch custom effect.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteBatchEffect.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLSpriteBatchEffect class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteBatchEffect.CreateEffectImplementation(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the effect implementation.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The effect implementation.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontHelper">
            <summary>
            Contains methods for processing sprite fonts.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontHelper.IdentifyGlyphs(Ultraviolet.Graphics.PlatformNativeSurface,System.Nullable{Ultraviolet.Rectangle})">
            <summary>
            Identifies the positions of the glyphs on the specified surface.
            </summary>
            <param name="surface">The surface on which to identify glyphs.</param>
            <param name="source">The region on the surface in which to look for glyphs, or null to examine the entire surface.</param>
            <returns>A collection of rectangles describing the positions of the glyphs on the specified surface.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromJObject">
            <summary>
            Loads sprite font assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromJObject.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Newtonsoft.Json.Linq.JObject,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromJObject.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromJObject.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromJObject.CreateSpriteFontDescription(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Creates a <see cref="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription"/> from the specified input file.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor">
            <summary>
            Loads sprite font assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ExportPreprocessedFace(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription,System.String,System.Boolean)">
            <summary>
            Exports a font face to the specified preprocessed asset stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ImportPreprocessedFace(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader,System.Collections.Generic.IEnumerable{Ultraviolet.Graphics.Graphics2D.CharacterRegion},System.Int32)">
            <summary>
            Imports a font face from the specified preprocessed asset stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ProcessFace(System.Collections.Generic.Dictionary{System.String,Ultraviolet.Graphics.PlatformNativeSurface},Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription,System.String,System.Collections.Generic.IEnumerable{Ultraviolet.Graphics.Graphics2D.CharacterRegion})">
            <summary>
            Processes the definition for a single font face.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.CreateKerningPair(System.String)">
            <summary>
            Creates a <see cref="T:Ultraviolet.Graphics.Graphics2D.SpriteFontKerningPair"/> from the specified string.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument">
            <summary>
            Loads sprite font assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument.CreateSpriteFontDescription(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <summary>
            Creates a <see cref="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription"/> from the specified input file.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessorFromXDocument.CreateSpriteFontFaceDescription(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XElement)">
            <summary>
            Creates a <see cref="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription"/> from the specified input file.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor">
            <summary>
            Loads sprite font assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Ultraviolet.Graphics.PlatformNativeSurface,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Ultraviolet.Graphics.PlatformNativeSurface)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.CharacterRegionDescription">
            <summary>
            An internal representation of a <see cref="T:Ultraviolet.Graphics.Graphics2D.CharacterRegion"/> used during content processing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.CharacterRegionDescription.Start">
            <summary>
            Gets or sets the first character in the region.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.CharacterRegionDescription.End">
            <summary>
            Gets or sets the last character in the region.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFacesDescription">
            <summary>
            An internal representation of a sprite font's collection of faces used during content processing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFacesDescription.Regular">
            <summary>
            Gets or sets a description of the font's regular face.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFacesDescription.Bold">
            <summary>
            Gets or sets a description of the font's bold face.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFacesDescription.Italic">
            <summary>
            Gets or sets a description of the font's italic face.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFacesDescription.BoldItalic">
            <summary>
            Gets or sets a description of the font's bold-italic face.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceGlyphDescription">
            <summary>
            An internal representation of the glyph metadata for a <see cref="T:Ultraviolet.Graphics.Graphics2D.SpriteFontFace"/> used during content processing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceGlyphDescription.Substitution">
            <summary>
            Gets or sets the face's substitution glyph.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription">
            <summary>
            An internal representation of a <see cref="T:Ultraviolet.Graphics.Graphics2D.SpriteFontFace"/> used during content processing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription.Texture">
            <summary>
            Gets or sets the asset path of the font face's texture.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription.TextureRegion">
            <summary>
            Gets or sets the region on the texture that contains the font face's glyph.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription.Glyphs">
            <summary>
            Gets or sets the face's glyph metadata.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription.Kernings">
            <summary>
            Gets or sets the face's collection of kerning values.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription.Ascender">
            <summary>
            Gets the height of the font's ascender in pixels.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontFaceDescription.Descender">
            <summary>
            Gets the height of the font's descender in pixels.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription">
            <summary>
            An internal representation of a <see cref="T:Ultraviolet.Graphics.Graphics2D.SpriteFont"/> used during content processing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription.Faces">
            <summary>
            Gets or sets the font's set of faces.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.SpriteFontDescription.CharacterRegions">
            <summary>
            Gets or sets the font's collection of character regions.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect">
            <summary>
            Represents the OpenGL implementation of the <see cref="T:Ultraviolet.Graphics.BasicEffect"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.OnVertexColorEnabledChanged">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.OnTextureEnabledChanged">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.CreateEffectImplementation(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the effect implementation.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The effect implementation.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.UpdateProgramIndex">
            <summary>
            Changes the effect's program index based on its current settings.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect">
            <summary>
            Represents the OpenGL implementation of <see cref="T:Ultraviolet.Graphics.BlurEffect"/>.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.OnRadiusChanged">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.OnDirectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.OnTextureSizeChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.IsArbitaryRadiusBlurAvailable">
            <summary>
            Gets a value indicating whether the arbitary-radius blur shader should be loaded.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.UpdateRadius">
            <summary>
            Updates the value of the Radius effect parameter.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.UpdateDirection">
            <summary>
            Updates the value of the Direction effect parameter.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.UpdateResolution">
            <summary>
            Updates the value of the Resolution effect parameter.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.CreateEffectImplementation(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the effect implementation.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The effect implementation.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.IBindableResource">
            <summary>
            Represents a resource which can be bound to the graphics device.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.IBindableResource.BindRead">
            <summary>
            Binds the resource for reading.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.IBindableResource.BindWrite">
            <summary>
            Binds the resource for writing.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.IBindableResource.UnbindRead">
            <summary>
            Unbinds the resource for reading.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.IBindableResource.UnbindWrite">
            <summary>
            Unbinds the resource for writing.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.IOpenGLDynamicTexture">
            <summary>
            Represents a dynamic texture which should be flushed prior to being boound for reading.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.IOpenGLDynamicTexture.Flush">
            <summary>
            Flushes any pending changes and uploads the result to video memory.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.IOpenGLResource">
            <summary>
            Represents an OpenGL resource.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.IOpenGLResource.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLAttribCategory">
            <summary>
            Represents the categories of vertex attribute types (single-precision floating point, double-precision
            floating point, or integer).
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLAttribCategory.Single">
            <summary>
            The attribute is a single-precision floating point value and should be set using glVertexAttribPointer.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLAttribCategory.Double">
            <summary>
            The attribute is a double-precision floating point value and should be set using glVertexAttribLPointer.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLAttribCategory.Integer">
            <summary>
            The attribute is an integer value and should be set using glVertexAttribIPointer.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLBlendState">
            <summary>
            Represents the OpenGL implementation of the BlendState class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLBlendState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateOpaque(Ultraviolet.UltravioletContext)">
            <summary>
            Creates an Opaque blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateAlphaBlend(Ultraviolet.UltravioletContext)">
            <summary>
            Creates an AlphaBlend blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateAdditive(Ultraviolet.UltravioletContext)">
            <summary>
            Creates an Additive blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateNonPremultiplied(Ultraviolet.UltravioletContext)">
            <summary>
            Creates a NonPremultiplied blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.IsSeparateBlend">
            <summary>
            Gets a value indicating whether this state uses separate alpha and color blending.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.Apply">
            <summary>
            Applies the blend state to the device.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.GetBlendFunctionGL(Ultraviolet.Graphics.BlendFunction)">
            <summary>
            Converts an Ultraviolet BlendFunction value to the equivalent OpenGL value.
            </summary>
            <param name="fn">The Ultraviolet BlendFunction value to convert.</param>
            <returns>The converted OpenGL value.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLBlendState.GetBlendGL(Ultraviolet.Graphics.Blend,System.Boolean)">
            <summary>
            Converts an Ultraviolet Blend value to the equivalent OpenGL value.
            </summary>
            <param name="blend">The Ultraviolet Blend value to convert.</param>
            <param name="alpha">A value indicating whether alpha blending is enabled.</param>
            <returns>The converted OpenGL value.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState">
            <summary>
            Represents the OpenGL implementation of the DepthStencilState class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLDepthStencilState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.CreateDefault(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the Default depth/stencil state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The depth/stencil state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.CreateDepthRead(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the DepthRead depth/stencil state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The depth/stencil state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.CreateNone(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the None depth/stencil state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The depth/stencil state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.Apply">
            <summary>
            Applies the depth/stencil state to the device.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.GetCompareFunctionGL(Ultraviolet.Graphics.CompareFunction)">
            <summary>
            Gets the OpenGL enum value that corresponds to the specified CompareFunction value.
            </summary>
            <param name="func">The CompareFunction value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.GetStencilOpGL(Ultraviolet.Graphics.StencilOperation)">
            <summary>
            Gets the OpenGL enum value that corresponds to the specified StencilOperation value.
            </summary>
            <param name="op">The StencilOperation value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D">
            <summary>
            Represents the OpenGL implementation of the <see cref="T:Ultraviolet.Graphics.DynamicTexture2D"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.#ctor(Ultraviolet.UltravioletContext,System.Int32,System.Int32,Ultraviolet.Graphics.TextureOptions,System.Object,System.Action{Ultraviolet.Graphics.Texture2D,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="options">The texture's configuration options.</param>
            <param name="state">An arbitrary state object which will be passed to the flush handler.</param>
            <param name="flushed">The handler to invoke when the texture is flushed.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.CompareTo(Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetData``1(``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetData``1(System.Int32,System.Nullable{Ultraviolet.Rectangle},``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetData``1(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetData``1(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetRawData(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetRawData(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SetData(Ultraviolet.Graphics.Surface2D)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.SrgbEncoded">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D">
            <summary>
            Represents the OpenGL implementation of the <see cref="T:Ultraviolet.Graphics.DynamicTexture3D"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.#ctor(Ultraviolet.UltravioletContext,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.TextureOptions,System.Object,System.Action{Ultraviolet.Graphics.Texture3D,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture2D"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="depth">The texture's depth in pixels.</param>
            <param name="options">The texture's configuration options.</param>
            <param name="state">An arbitrary state object which will be passed to the flush handler.</param>
            <param name="flushed">The handler to invoke when the texture is flushed.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.CompareTo(Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.Resize(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.SetData``1(``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.SetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.SetRawData(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.SetRawData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.SrgbEncoded">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.Width">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.Height">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.Depth">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLDynamicTexture3D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation">
            <summary>
            Represents the OpenGL implementation of EffectImplementation.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.#ctor(Ultraviolet.UltravioletContext,System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique},System.Collections.Generic.HashSet{System.String})">
            <summary>
            Initializes a new instance of the OpenGLEffect class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="techniques">The effect's techniques.</param>
            <param name="parameters">The effect's list of expected parameters, or <see langword="null"/> to
            determine the parameters by querying shader uniforms.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.Parameters">
            <summary>
            Gets the effect's collection of parameters.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.Techniques">
            <summary>
            Gets the effect's collection of techniques.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.CurrentTechnique">
            <summary>
            Gets the effect's current technique.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.CreateEffectParameters(System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique},System.Collections.Generic.HashSet{System.String})">
            <summary>
            Creates an effect parameter collection from the specified collection of techniques.
            </summary>
            <param name="techniques">The collection of techniques from which to create an effect parameter collection.</param>
            <param name="parameters">The collection of expected parameter names, or <see langword="null"/> to query
            effect parameters from shader uniforms.</param>
            <returns>The effect parameter collection that was created.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromShaderSource">
            <summary>
            Loads shader effect assets from shader source files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromShaderSource.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromShaderSource.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2">
            <summary>
            Loads shader effect assets from version 2 XML definition files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2.#ctor(Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2"/> class.
            </summary>
            <param name="parent">The processor's parent instance.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV2.DeserializeDescription(System.Xml.Linq.XDocument)">
            <summary>
            Creates a new <see cref="T:Ultraviolet.OpenGL.Graphics.EffectDescription"/> object from the specified XML document.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1">
            <summary>
            Loads shader effect assets from version 1 XML definition files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1.#ctor(Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1"/> class.
            </summary>
            <param name="parent">The processor's parent instance.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocumentV1.GetShader(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the asset path of the specified shader.
            </summary>
            <param name="element">The XML element that defines the shaders for an effect pass.</param>
            <param name="shader">The name of the shader to retrieve.</param>
            <returns>The asset path of the specified shader.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument">
            <summary>
            Loads shader effect assets from XML definition files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.GetVersionFromXml(System.Xml.Linq.XDocument)">
            <summary>
            Gets the version of the specified XML effect definition file.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromXDocument.GetVersionFromStream(System.IO.BinaryReader)">
            <summary>
            Gets the version of the specified preprocessed data stream.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromJObject">
            <summary>
            Loads shader effect assets from JSON definition files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromJObject.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Newtonsoft.Json.Linq.JObject,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromJObject.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromJObject.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Newtonsoft.Json.Linq.JObject)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessorFromJObject.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter">
            <summary>
            Represents the OpenGL implementation of the EffectParameter class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.#ctor(Ultraviolet.UltravioletContext,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the OpenGLEffectParameter class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The effect parameter's name.</param>
            <param name="type">The effect parameter's uniform type.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueBoolean">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueInt32">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueInt32Array">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueUInt32">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueUInt32Array">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.UInt32[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueSingle">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueSingleArray">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Single[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueDouble">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueDoubleArray">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector2">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector2Array">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Vector2[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector3">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector3Array">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Vector3[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector4">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Vector4)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector4Array">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Vector4[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueColor">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueColorArray">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Color[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueMatrix">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueMatrixArray">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Matrix[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueTexture2D">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Graphics.Texture2D)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueTexture3D">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(Ultraviolet.Graphics.Texture3D)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.Data">
            <summary>
            Gets the parameter's data container.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterCollection">
            <summary>
            Represents the OpenGL implementation of the EffectParameterCollection class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterCollection.#ctor(System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter})">
            <summary>
            Initializes a new instance of the OpenGLEffectParameterCollection class.
            </summary>
            <param name="parameters">The set of parameters to add to the collection.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData">
            <summary>
            Contains the data for an effect parameter.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.#ctor">
            <summary>
            Initializes a new instance of the OpenGLEffectParameterData class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Clear">
            <summary>
            Clears the data buffer.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Boolean)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Int32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Int32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.UInt32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.UInt32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Single)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Single[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Double)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Double[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Vector2)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Vector2[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Vector3)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Vector3[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Vector4)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Vector4[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Color)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Color[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Matrix)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Matrix[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Graphics.Texture2D)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(Ultraviolet.Graphics.Texture3D)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetBoolean">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetInt32">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetInt32Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetUInt32">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetUInt32Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetSingle">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetSingleArray">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetDouble">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetDoubleArray">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector2">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector2Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector3">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector3Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector4">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector4Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetColor">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetColorArray">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetMatrix">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetMatrixArray">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetTexture2D">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetTexture3D">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.DataType">
            <summary>
            Gets the type of data currently stored in this buffer.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Version">
            <summary>
            Gets the version number of this data.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType">
            <summary>
            Represents the types of data that can be set on an effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.None">
            <summary>
            No data is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Boolean">
            <summary>
            A <see cref="T:System.Boolean"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Int32">
            <summary>
            An <see cref="T:System.Int32"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Int32Array">
            <summary>
            An array of <see cref="T:System.Int32"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.UInt32">
            <summary>
            A <see cref="T:System.UInt32"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.UInt32Array">
            <summary>
            An array of <see cref="T:System.UInt32"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Single">
            <summary>
            A <see cref="T:System.Single"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.SingleArray">
            <summary>
            An array of <see cref="T:System.Single"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Double">
            <summary>
            A <see cref="T:System.Double"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.DoubleArray">
            <summary>
            An array of <see cref="T:System.Double"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector2">
            <summary>
            A <see cref="T:Ultraviolet.Vector2"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector2Array">
            <summary>
            An array of <see cref="T:Ultraviolet.Vector2"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector3">
            <summary>
            A <see cref="T:Ultraviolet.Vector3"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector3Array">
            <summary>
            An array of <see cref="T:Ultraviolet.Vector3"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector4">
            <summary>
            A <see cref="T:Ultraviolet.Vector4"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector4Array">
            <summary>
            An array of <see cref="T:Ultraviolet.Vector4"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Color">
            <summary>
            A <see cref="T:Ultraviolet.Color"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.ColorArray">
            <summary>
            An array of <see cref="T:Ultraviolet.Color"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Matrix">
            <summary>
            A <see cref="T:Ultraviolet.Matrix"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.MatrixArray">
            <summary>
            An array of <see cref="T:Ultraviolet.Matrix"/> values is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Texture2D">
            <summary>
            A <see cref="T:Ultraviolet.Graphics.Texture2D"/> value is set on the effect.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Texture3D">
            <summary>
            A <see cref="T:Ultraviolet.Graphics.Texture3D"/> value is set on the effect.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass">
            <summary>
            Represents the OpenGL implementation of the EffectPass class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.#ctor(Ultraviolet.UltravioletContext,System.String,System.Collections.Generic.ICollection{Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram})">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The effect pass' name.</param>
            <param name="programs">The effect pass' collection of shader programs.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.Apply">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.ProgramIndex">
            <summary>
            Gets or sets the effect pass' current program index.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.ProgramCount">
            <summary>
            Gets or sets the effect pass' program count.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.Programs">
            <summary>
            Gets the effect pass' collection of shader programs.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectPassCollection">
            <summary>
            Represents the OpenGL implementation of the EffectPassCollection class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectPassCollection.#ctor(System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLEffectPass})">
            <summary>
            Initializes a new instance of the OpenGLEffectPassCollection class.
            </summary>
            <param name="passes">The collection of effect passes to add to the collection.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromShaderSource">
            <summary>
            Loads shader effect assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromShaderSource.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromShaderSource.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromShaderSource.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromShaderSource.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromShaderSource.Externs">
            <summary>
            Gets or sets the collection of externs which are provided to the effect upon compilation.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromJObject">
            <summary>
            Loads shader effect assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromJObject.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Newtonsoft.Json.Linq.JObject,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromJObject.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromJObject.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Newtonsoft.Json.Linq.JObject)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromJObject.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromJObject.Externs">
            <summary>
            Gets or sets the collection of externs which are provided to the effect upon compilation.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromXDocument">
            <summary>
            Loads shader effect assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromXDocument.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromXDocument.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromXDocument.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromXDocument.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessorFromXDocument.Externs">
            <summary>
            Gets or sets the collection of externs which are provided to the effect upon compilation.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectSource">
            <summary>
            Represents the OpenGL implementation of the <see cref="T:Ultraviolet.Graphics.EffectSource"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectSource.#ctor(Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceAssetType,Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectSource"/> class.
            </summary>
            <param name="assetType">The asset type that was loaded.</param>
            <param name="manager">The content manager with which the asset was loaded.</param>
            <param name="input">The intermediate form of the asset that was loaded.</param>
            <param name="metadata">The processor metadata for the asset that was loaded.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectSource.Compile(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceAssetType">
            <summary>
            Represents the type of asset from which an effect source was loaded.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceAssetType.JObject">
            <summary>
            The effect source was loaded from a JSON definition file.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceAssetType.ShaderSource">
            <summary>
            The effect source was loaded from a shader source file.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceAssetType.XDocument">
            <summary>
            The effect source was loaded from an XML definition file.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromJObject">
            <summary>
            Loads effect source assets from JSON definition files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromJObject.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Newtonsoft.Json.Linq.JObject)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromJObject.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromShaderSource">
            <summary>
            Loads effect source assets from shader source files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromShaderSource.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromShaderSource.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromXDocument">
            <summary>
            Loads effect source assets from XML definition files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromXDocument.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectSourceProcessorFromXDocument.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique">
            <summary>
            Represents the OpenGL implementation of the EffectTechnique class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique.#ctor(Ultraviolet.UltravioletContext,System.String,System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLEffectPass})">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The technique's name.</param>
            <param name="passes">The technique's effect passes.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique.Passes">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechniqueCollection">
            <summary>
            Represents the OpenGL implementation of the EffectTechniqueCollection class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLEffectTechniqueCollection.#ctor(System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique})">
            <summary>
            Initializes a new instance of the OpenGLEffectTechniqueCollection class.
            </summary>
            <param name="techniques">A collection of effect techniques to add to the collection.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader">
            <summary>
            Represents a fragment shader.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.OpenGL.Graphics.ShaderSource[])">
            <summary>
            Initializes a new instance of the OpenGLFragmentShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.OpenGL.Graphics.ShaderSource)">
            <summary>
            Initializes a new instance of the OpenGLFragmentShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.OpenGLName">
            <summary>
            Gets the OpenGL shader handle.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.ShaderSourceMetadata">
            <summary>
            Gets the shader source metadata for this shader.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShaderImporter">
            <summary>
            Imports .frag files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShaderImporter.Import(Ultraviolet.Content.IContentImporterMetadata,System.IO.Stream)">
            <summary>
            Imports the data from the specified file.
            </summary>
            <param name="metadata">The asset metadata for the asset to import.</param>
            <param name="stream">The stream that contains the data to import.</param>
            <returns>The data structure that was imported from the file.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShaderProcessor">
            <summary>
            Loads fragment shader assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLFragmentShaderProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream">
            <summary>
            Represents the OpenGL implementation of the GeometryStream class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.#cctor">
            <summary>
            Initializes the OpenGLGeometryStream type.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLGeometryStream class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Attach(Ultraviolet.Graphics.VertexBuffer)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Attach(Ultraviolet.Graphics.VertexBuffer,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Attach(Ultraviolet.Graphics.IndexBuffer)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Apply">
            <summary>
            Applies the geometry stream to the graphics device.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.ApplyAttributes(System.UInt32,System.UInt32)">
            <summary>
            Applies the geometry stream's vertex attributes to the specified program.
            </summary>
            <param name="program">The OpenGL identifier of the shader program being used to render.</param>
            <param name="offset">The offset within the vertex buffer, in bytes, at which vertex begins.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.IsUsingVertexArrayObject">
            <summary>
            Gets a value indicating whether this geometry stream is implemented using a vertex array object (VAO).
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.SupportsInstancedRendering">
            <summary>
            Gets a value indicating whether the geometry stream supports instanced rendering.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.HasMultipleSources">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.HasVertices">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.HasIndices">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.IndexBufferElementType">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.GetVertexFormatGL(Ultraviolet.Graphics.VertexFormat,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Gets the OpenGL vertex format that corresponds to the specified Ultraviolet vertex format.
            </summary>
            <param name="format">The vertex format to convert.</param>
            <param name="size">The number of components in the element.</param>
            <param name="stride">The vertex stride in bytes.</param>
            <param name="normalize">A value indicating whether to normalize the attribute's values.</param>
            <returns>The converted vertex format.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.GetVertexAttributeNameFromUsage(Ultraviolet.Graphics.VertexUsage,System.Int32)">
            <summary>
            Gets the name of the shader attribute which corresponds to the specified Ultraviolet vertex usage.
            </summary>
            <param name="usage">The vertex usage for which to retrieve a name.</param>
            <param name="index">The vertex usage index for which to retrieve a name.</param>
            <returns>The name of the specified shader attribute.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.SwitchCachedProgram(System.UInt32)">
            <summary>
            Attempts to associate this geometry stream with the specified OpenGL program.
            </summary>
            <param name="program">The OpenGL name of the program with which to associate this stream.</param>
            <returns><see langword="true"/> if the stream's cached program was changed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.DisableVertexAttributesOnCachedProgram">
            <summary>
            Disables all of the active vertex attributes for the currently cached program.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.BindBuffers(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Binds the geometry stream's buffers to the device in preparation for rendering.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.BindVertexAttributesForBuffer_OldAPI(Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer,System.UInt32,System.UInt32,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Binds the specified buffer's vertex attributes to the currently cached program using the old API.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.BindVertexAttributesForBuffer_NewAPI(Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer,System.UInt32,System.UInt32,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Binds the specified buffer's vertex attributes to the currently cached program using the new API.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.AttachInternal(Ultraviolet.Graphics.VertexBuffer,System.Int32)">
            <summary>
            Attaches the specified vertex buffer to the geometry stream.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding">
            <summary>
            Represents a vertex buffer which has been bound to a geometry stream.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding.#ctor(Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding"/> structure.
            </summary>
            <param name="vbuffer">The vertex buffer which is bound to the geometry stream.</param>
            <param name="instanceFrequency">The number of instances which are drawn for each
            set of data in the vertex buffer.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding.VertexBuffer">
            <summary>
            Gets the vertex buffer which is bound to the geometry stream.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding.InstanceFrequency">
            <summary>
            Gets the number of instances which are drawn for each set of data
            in the vertex buffer.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.#ctor(Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities"/> class.
            </summary>
            <param name="configuration">The configuration settings for the Ultraviolet context.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.FlippedTextures">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.Supports3DTextures">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsDepthStencilTextures">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsInstancedRendering">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsNonZeroBaseInstance">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsPreservingRenderTargetContentInHardware">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsIndependentSamplerState">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsIntegerVertexAttributes">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsDoublePrecisionVertexAttributes">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SrgbEncodingEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MaximumTextureSize">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MaximumViewportWidth">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MaximumViewportHeight">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MinMapBufferAlignment">
            <summary>
            Gets the value of GL_MIN_MAP_BUFFER_ALIGNMENT.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer">
            <summary>
            Represents the OpenGL implementation of the IndexBuffer class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.Graphics.IndexBufferElementType,System.Int32,System.UInt32)">
            <summary>
            Initializes a new instance of the OpenGLIndexBuffer.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="itype">The index element type.</param>
            <param name="icount">The index element count.</param>
            <param name="usage">The buffer's usage type.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetData``1(``0[],System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetRawData(System.IntPtr,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetDataAligned``1(``0[],System.Int32,System.Int32,System.Int32,System.Int32@,Ultraviolet.Graphics.SetDataOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.GetAlignmentUnit">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.GetAlignedSize(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.IsContentLost">
            <summary>
            Gets a value indicating whether the buffer's content has been lost.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetDataInternal(System.Object,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Sets the buffer's data from native memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetRawDataInternal(System.IntPtr,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Sets the buffer's data from native memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.Upload(System.IntPtr,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Uploads buffer data to the graphics device.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.GetElementSize">
            <summary>
            Gets the size of one of the buffer's elements, in bytes.
            </summary>
            <returns>The size of one of the buffer's elements.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState">
            <summary>
            Represents the OpenGL implementation of the RasterizerState class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLRasterizerState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.CreateCullClockwise(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the CullClockwise rasterizer state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The rasterizer state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.CreateCullCounterClockwise(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the CullCounterClockwise rasterizer state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The rasterizer state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.CreateCullNone(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the CullNone rasterizer state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The rasterizer state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.Apply">
            <summary>
            Applies the rasterizer state to the device.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.GetFrontFaceGL(Ultraviolet.Graphics.CullMode)">
            <summary>
            Gets the OpenGL face mode that corresponds to the specified CullMode value.
            </summary>
            <param name="mode">The CullMode value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.GetFillModeGL(Ultraviolet.Graphics.FillMode)">
            <summary>
            Gets the OpenGL fill mode value that corresponds to the specified FillMode value.
            </summary>
            <param name="mode">The FillMode value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D">
            <summary>
            Represents the OpenGL implementation of the RenderBuffer2D class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.Graphics.RenderBufferFormat,System.Int32,System.Int32,Ultraviolet.Graphics.RenderBufferOptions)">
            <summary>
            Initializes a new instance of the OpenGLRenderBuffer2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="format">The render buffer's format.</param>
            <param name="width">The render buffer's width in pixels.</param>
            <param name="height">The render buffer's height in pixels.</param>
            <param name="options">The render buffer's configuration options.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.CompareTo(Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(System.Int32,System.Nullable{Ultraviolet.Rectangle},``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetRawData(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetRawData(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData(Ultraviolet.Graphics.Surface2D)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.MarkAttached">
            <summary>
            Marks the render buffer as being attached to a render target.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Format">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SrgbEncoded">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Attached">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.ResizeInternal(System.Int32,System.Int32)">
            <summary>
            Resizes the render buffer. This method should only be called by the render target
            to which this buffer is attached.
            </summary>
            <param name="width">The render buffer's new width in pixels.</param>
            <param name="height">The render target's new width in pixels.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.AllocateRenderbufferStorage(System.Int32,System.Int32)">
            <summary>
            Reallocates the renderbuffer's storage.
            </summary>
            <param name="width">The renderbuffer's width in pixels.</param>
            <param name="height">The renderbuffer's height in pixels.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D">
            <summary>
            Represents the OpenGL implementation of the RenderTarget2D class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.#ctor(Ultraviolet.UltravioletContext,System.Int32,System.Int32,Ultraviolet.Graphics.RenderTargetUsage,System.Collections.Generic.IEnumerable{Ultraviolet.Graphics.RenderBuffer2D})">
            <summary>
            Initializes a new instance of the OpenGLRenderTarget2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The render target's width in pixels.</param>
            <param name="height">The render target's height in pixels.</param>
            <param name="usage">A <see cref="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.RenderTargetUsage"/> value specifying whether the 
            render target's data is discarded or preserved when it is bound to the graphics device.</param>
            <param name="buffers">The collection of render buffers to attach to the target.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Attach(Ultraviolet.Graphics.RenderBuffer2D)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.GetData(Ultraviolet.Color[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.GetData(Ultraviolet.Color[],Ultraviolet.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Invalidate(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.ValidateStatus">
            <summary>
            Validates that the framebuffer is in a state which is ready for rendering.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BindRead">
            <summary>
            Binds the resource for reading.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BindWrite">
            <summary>
            Binds the resource for writing.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.UnbindRead">
            <summary>
            Unbinds the resource for reading.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.UnbindWrite">
            <summary>
            Unbinds the resource for reading.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Size">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.HasColorBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.HasSrgbEncodedColorBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.HasDepthBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.HasStencilBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.HasDepthStencilBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.RenderTargetUsage">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachRenderBuffer(Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a render buffer to the render target.
            </summary>
            <param name="buffer">The render buffer to attach to the render target.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachColorBuffer(Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a color buffer to the render target.
            </summary>
            <param name="buffer">The color buffer to attach to the render target.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachDepthBuffer(Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a depth buffer to the render target.
            </summary>
            <param name="buffer">The depth buffer to attach to the render target.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachStencilBuffer(Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a stencil buffer to the render target.
            </summary>
            <param name="buffer">The stencil buffer to attach to the render target.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachDepthStencilBuffer(Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a depth/stencil buffer to the render target.
            </summary>
            <param name="buffer">The depth/stencil buffer to attach to the render target.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.GetDataInternal(Ultraviolet.Color[],Ultraviolet.Rectangle)">
            <summary>
            Gets the render target's data.
            </summary>
            <param name="data">An array to populate with the render target's data.</param>
            <param name="region">The region of the render target from which to retrieve data.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.UpdateDrawBuffers">
            <summary>
            Updates the set of draw buffers which are enabled for this framebuffer.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject">
            <summary>
            Represents an OpenGL Sampler Object.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject.ApplySamplerState(Ultraviolet.Graphics.SamplerState)">
            <summary>
            Applies the specified sampler state to this sampler.
            </summary>
            <param name="state">The sampler state to apply.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject.Bind(System.UInt32)">
            <summary>
            Binds the sampler object to the specified texture unit.
            </summary>
            <param name="unit">The texture unit to which to bind the sampler object.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject.OpenGLName">
            <inheridoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState">
            <summary>
            Represents the OpenGL implementation of the SamplerState class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.#ctor(Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLSamplerState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreatePointClamp(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the PointClamp sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreatePointWrap(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the PointWrap sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateLinearClamp(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the LinearClamp sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateLinearWrap(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the LinearWrap sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateAnisotropicClamp(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the AnisotropicClamp sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateAnisotropicWrap(Ultraviolet.UltravioletContext)">
            <summary>
            Creates the AnisotropicWrap sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.Apply(System.Int32,System.UInt32)">
            <summary>
            Applies the sampler state to the device.
            </summary>
            <param name="sampler">The sampler index on which to set the state.</param>
            <param name="target">GL_TEXTURE_2D or GL_TEXTURE_3D, as appropriate.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.GetTextureAddressModeGL(Ultraviolet.Graphics.TextureAddressMode)">
            <summary>
            Converts the specified TextureAddressMode value to the equivalent OpenGL value.
            </summary>
            <param name="mode">The TextureAddressMode value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram">
            <summary>
            Represents an OpenGL shader program.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.OpenGL.Graphics.OpenGLVertexShader,Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLShaderProgram class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="vertexShader">The program's vertex shader.</param>
            <param name="fragmentShader">The program's fragment shader.</param>
            <param name="programOwnsShaders">A value indicating whether the program owns the shader objects.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.GetAttribLocation(System.String)">
            <summary>
            Gets the location of the specified attribute within the shader program's list of attributes.
            </summary>
            <param name="name">The name of the attribute to evaluate.</param>
            <returns>The location of the specified attribute, or -1 if the attribute does not exist within the program.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.GetAttribLocation(System.String,Ultraviolet.OpenGL.Graphics.OpenGLAttribCategory@)">
            <summary>
            Gets the location of the specified attribute within the shader program's list of attributes.
            </summary>
            <param name="name">The name of the attribute to evaluate.</param>
            <param name="category">A value specifying the attribute's type category.</param>
            <returns>The location of the specified attribute, or -1 if the attribute does not exist within the program.</returns>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.VertexShader">
            <summary>
            Gets the program's vertex shader.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.FragmentShader">
            <summary>
            Gets the program's fragment shader.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.Uniforms">
            <summary>
            Gets the program's collection of uniforms.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.CreateUniformCollection(Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Creates the effect pass' collection of uniforms.
            </summary>
            <param name="ssmd">The source metadata for this program.</param>
            <returns>The collection of uniforms that was created.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgramCollection">
            <summary>
            Represents an effect pass' collection of shader programs.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgramCollection.#ctor">
            <summary>
            Initializes a new instance of the OpenGLShaderProgramCollection class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderProgramCollection.#ctor(System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram})">
            <summary>
            Initializes a new instance of the OpenGLShaderProgramCollection class.
            </summary>
            <param name="programs">The collection whose elements are copied to this collection.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform">
            <summary>
            Represents a shader uniform.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.#ctor(Ultraviolet.UltravioletContext,System.String,System.UInt32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the OpenGLShaderUniform class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The effect parameter's name.</param>
            <param name="type">The effect parameter's uniform type.</param>
            <param name="program">The effect parameter's associated program identifier.</param>
            <param name="location">The effect parameter's uniform location.</param>
            <param name="sampler">The effect's corresponding texture sampler, if any.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Apply">
            <summary>
            Applies the shader uniform.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetDataSource(Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData)">
            <summary>
            Sets the effect parameter which the uniform uses as its data source.
            </summary>
            <param name="source">The effect parameter which the uniform will use as its data source.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Boolean)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Int32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Int32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.UInt32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.UInt32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Single)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Single[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Double)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Double[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Vector2)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Vector2[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Vector3)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Vector3[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Vector4)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Vector4[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Color)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Color[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Matrix)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Matrix[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Graphics.Texture2D)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(Ultraviolet.Graphics.Texture3D)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Name">
            <summary>
            Gets the shader uniform's name.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Type">
            <summary>
            Gets the shader uniform's type.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Program">
            <summary>
            Gets the shader program identifier.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniformCollection">
            <summary>
            Represents a collection of shader uniforms.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniformCollection.#ctor(System.Collections.Generic.IEnumerable{Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform})">
            <summary>
            Initializes a new instance of the OpenGLShaderUniformCollection class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLShaderUniformCollection.GetName(Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform)">
            <summary>
            Gets the specified item's name.
            </summary>
            <param name="item">The item for which to retrieve a name.</param>
            <returns>The specified item's name.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLState">
            <summary>
            Represents a collection of states to apply to the OpenGL context.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLState.OpenGLStateType">
            <summary>
            Represents the type of a <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> object, which determines how it modifies the OpenGL context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.#cctor">
            <summary>
            Initializes the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> type.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ResetCache">
            <summary>
            Resets the values that are stored in the OpenGL state cache to their defaults.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.VerifyCache">
            <summary>
            Verifies that the values that are stored in the OpenGL state cache accurately
            reflect the current state of the OpenGL context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedActiveTexture(System.UInt32)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which sets the active texture unit.
            </summary>
            <param name="texture">The texture unit to activate.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ActiveTexture(System.UInt32)">
            <summary>
            Immediately sets the active texture unit and updates the state cache.
            </summary>
            <param name="texture">The texture unit to activate.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindTexture2D(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a 2D texture to the context.
            </summary>
            <param name="texture">The texture to bind to the context.</param>
            <param name="force">A value indicating whether to force-bind the texture, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindTexture2D(System.UInt32)">
            <summary>
            Immediately binds a 2D texture to the OpenGL context and updates the state cache.
            </summary>
            <param name="texture">The texture to bind to the context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindTexture3D(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a 3D texture to the context.
            </summary>
            <param name="texture">The texture to bind to the context.</param>
            <param name="force">A value indicating whether to force-bind the texture, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindTexture3D(System.UInt32)">
            <summary>
            Immediately binds a 3D texture to the OpenGL context and updates the state cache.
            </summary>
            <param name="texture">The texture to bind to the context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindVertexArrayObject(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a vertex array object to the context.
            </summary>
            <param name="vertexArrayObject">The vertex array object to bind to the context.</param>
            <param name="elementArrayBuffer">The vertex array's associated element array buffer.</param>
            <param name="force">A value indicating whether to force-bind the vertex array object, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindVertexArrayObject(System.UInt32,System.UInt32)">
            <summary>
            Immediately binds a vertex array object to the OpenGL context and updates the state cache.
            </summary>
            <param name="vertexArrayObject">The vertex array object to bind to the context.</param>
            <param name="elementArrayBuffer">The vertex array's associated element array buffer.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindArrayBuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds an array buffer to the context.
            </summary>
            <param name="arrayBuffer">The array buffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the array buffer, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindArrayBuffer(System.UInt32)">
            <summary>
            Immediately binds an array buffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="arrayBuffer">The array buffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindElementArrayBuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds an element array buffer to the context.
            </summary>
            <param name="elementArrayBuffer">The element array buffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the array buffer, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindElementArrayBuffer(System.UInt32)">
            <summary>
            Immediately binds an element array buffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="elementArrayBuffer">The element array buffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindFramebuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a framebuffer to the context.
            </summary>
            <param name="framebuffer">The framebuffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the framebuffer, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindFramebuffer(System.UInt32)">
            <summary>
            Immediately binds a framebuffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="framebuffer">The framebuffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindRenderbuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a renderbuffer to the context.
            </summary>
            <param name="renderbuffer">The renderbuffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the renderbuffer, even if DSA is available.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.BindRenderbuffer(System.UInt32)">
            <summary>
            Immediately binds a renderbuffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="renderbuffer">The renderbuffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedUseProgram(Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which activates a shader program.
            </summary>
            <param name="program">The program to bind to the OpenGL context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.UseProgram(Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram)">
            <summary>
            Immediately activates a shader program and updates the state cache.
            </summary>
            <param name="program">The program to bind to the OpenGL context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateArrayBuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates an array buffer.
            </summary>
            <param name="buffer">The identifier of the buffer that was created.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateElementArrayBuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates an element array buffer.
            </summary>
            <param name="buffer">The identifier of the buffer that was created.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateTexture2D(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a 2D texture.
            </summary>
            <param name="texture">The identifier of the texture that was created.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateTexture3D(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a 3D texture.
            </summary>
            <param name="texture">The identifier of the texture that was created.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateFramebuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a framebuffer.
            </summary>
            <param name="framebuffer">The identifier of the framebuffer that was created.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateRenderbuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a renderbuffer.
            </summary>
            <param name="renderbuffer">The identifier of the renderbuffer that was created.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.DeleteTexture2D(System.UInt32)">
            <summary>
            Indicates that the specified texture has been deleted and updates the OpenGL state accordingly.
            </summary>
            <param name="texture">The texture to delete.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.DeleteTexture3D(System.UInt32)">
            <summary>
            Indicates that the specified texture has been deleted and updates the OpenGL state accordingly.
            </summary>
            <param name="texture">The texture to delete.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.DeleteVertexArrayObject(System.UInt32,System.UInt32)">
            <summary>
            Indicates that the specified vertex array object has been deleted and updates the OpenGL state accordingly.
            </summary>
            <param name="vertexArrayObject">The vertex array object to delete.</param>
            <param name="elementArrayBuffer">The element array buffer to delete.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.Apply">
            <summary>
            Applies the state object's values to the OpenGL context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLState.Dispose">
            <summary>
            Resets the OpenGL context to its values prior to this object's application.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.CurrentProgram">
            <summary>
            Gets the current shader program, if any is currently active.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.ClearColor">
            <summary>
            Gets or sets the value to which the color buffer is cleared.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.ClearDepth">
            <summary>
            Gets or sets the value to which the depth buffer is cleared.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.ClearStencil">
            <summary>
            Gets or sets the value to which the stencil buffer is cleared.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.ColorMask">
            <summary>
            Gets or sets a value indicating which color channels are enabled for writing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.DepthTestEnabled">
            <summary>
            Gets or sets a value indicating whether GL_DEPTH_TEST is enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.DepthMask">
            <summary>
            Gets or sets a value indicating whether writing into the depth buffer is enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.DepthFunc">
            <summary>
            Gets or sets the depth comparison function.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilTestEnabled">
            <summary>
            Gets or sets a value indicating whether GL_STENCIL_TEST is enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilFuncCombined">
            <summary>
            Gets or sets the combined stencil function.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilFuncFront">
            <summary>
            Gets or sets the front stencil function.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilFuncBack">
            <summary>
            Gets or sets the back stencil function.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilOpCombined">
            <summary>
            Gets or sets the combined stencil operation.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilOpFront">
            <summary>
            Gets or sets the front stencil operation.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilOpBack">
            <summary>
            Gets or sets the back stencil operation.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.StencilMask">
            <summary>
            Gets or sets the stencil mask.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.BlendEnabled">
            <summary>
            Gets or sets a value indicating whether GL_BLEND is enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.BlendColor">
            <summary>
            Gets or sets the blending color.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.BlendEquation">
            <summary>
            Gets or sets the blending equation.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.BlendFunction">
            <summary>
            Gets or sets the blending function.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.CullingEnabled">
            <summary>
            Gets or sets a value indicating whether face culling is enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.CulledFace">
            <summary>
            Gets or sets the polygon face which is being culled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.FrontFace">
            <summary>
            Gets or sets the front face of polygons.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.PolygonOffsetEnabled">
            <summary>
            Gets or sets a value indicating whether polygon offsets are enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.PolygonOffset">
            <summary>
            Gets or sets the polygon offset values.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.PolygonMode">
            <summary>
            Gets or sets the polygon rasterization mode.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.ScissorTestEnabled">
            <summary>
            Gets or sets a value indicating whether the scissor test is enabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_ACTIVE_TEXTURE">
            <summary>
            Gets the cached value of GL_ACTIVE_TEXTURE.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_TEXTURE_BINDING_2D">
            <summary>
            Gets the cached value of GL_TEXTURE_BINDING_2D.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_TEXTURE_BINDING_3D">
            <summary>
            Gets the cached value of GL_TEXTURE_BINDING_3D.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_VERTEX_ARRAY_BINDING">
            <summary>
            Gets the cached value of GL_VERTEX_ARRAY_BINDING.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_ARRAY_BUFFER_BINDING">
            <summary>
            Gets the cached value of GL_ARRAY_BUFFER_BINDING.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_ELEMENT_ARRAY_BUFFER_BINDING">
            <summary>
            Gets the cached value of GL_ELEMENT_ARRAY_BUFFER_BINDING.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_FRAMEBUFFER_BINDING">
            <summary>
            Gets the cached value of GL_FRAMEBUFFER_BINDING.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_RENDERBUFFER_BINDING">
            <summary>
            Gets the cached value of GL_RENDERBUFFER_BINDING.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLState.GL_CURRENT_PROGRAM">
            <summary>
            Gets the cached value of GL_CURRENT_PROGRAM.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger">
            <summary>
            Represents a value associated with an OpenGL context that is cached by the OpenGL implementation
            of Ultraviolet in order to avoid costly calls to glGet() functions.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.#ctor(System.String,System.UInt32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger"/> class.
            </summary>
            <param name="name">The human-readable name of this value.</param>
            <param name="pname">The property name of this value when retrieved via glGet().</param>
            <param name="initial">The initial value of the integer.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.op_Implicit(Ultraviolet.OpenGL.Graphics.OpenGLStateInteger)~System.Int32">
            <summary>
            Implicitly converts a cached value to an integer.
            </summary>
            <param name="value">The cached value to convert.</param>
            <returns>The converted integer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.op_Implicit(Ultraviolet.OpenGL.Graphics.OpenGLStateInteger)~System.UInt32">
            <summary>
            Implicitly converts a cached value to an integer.
            </summary>
            <param name="value">The cached value to convert.</param>
            <returns>The converted integer.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Reset">
            <summary>
            Resets the state of the cached integer.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Verify">
            <summary>
            Verifies that the cached value matches the value that is currently
            set on the current OpenGL context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Update(System.Int32)">
            <summary>
            Updates the cached value.
            </summary>
            <param name="value">The new value.</param>
            <returns>The old value.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Update(System.UInt32)">
            <summary>
            Updates the cached value.
            </summary>
            <param name="value">The new value.</param>
            <returns>The old value.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.ToString">
            <summary>
            Converts the object to a human-readable string.
            </summary>
            <returns>A human-readable string that represents the object.</returns>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Name">
            <summary>
            Gets the value's human-readable name.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D">
            <summary>
            Represents the OpenGL implementation of the Texture2D class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(Ultraviolet.UltravioletContext,System.IntPtr,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.TextureOptions)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="pixels">A pointer to the raw pixel data with which to populate the texture.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="bytesPerPixel">The number of bytes which represent each pixel in the raw data.</param>
            <param name="options">The texture's configuration options.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(Ultraviolet.UltravioletContext,System.Int32,System.Int32,Ultraviolet.Graphics.TextureOptions)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="options">The texture's configuration options.</param>
            <returns>The instance of Texture2D that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texture's texel format.</param>
            <param name="type">The texture's texel type.</param>
            <param name="data">The texture's data.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
            <returns>The instance of Texture2D that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texture's texel format.</param>
            <param name="type">The texture's texel type.</param>
            <param name="data">The texture's data.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
            <param name="rbuffer">A value indicating whether this texture is being used as a render buffer.</param>
            <returns>The instance of Texture2D that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.CompareTo(Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(System.Int32,System.Nullable{Ultraviolet.Rectangle},``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetRawData(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetRawData(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData(Ultraviolet.Graphics.Surface2D)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SrgbEncoded">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.CreateNativeTexture(Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Void*,System.Boolean)">
            <summary>
            Creates the underlying native OpenGL texture with the specified format and data.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texel format.</param>
            <param name="type">The texel data type.</param>
            <param name="pixels">A pointer to the beginning of the texture's pixel data.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.ProcessResize">
            <summary>
            Processes a resize operation for this texture.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetDataInternal(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.Object,System.Int32,System.Int32)">
            <summary>
            Sets the texture's data from managed memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetRawDataInternal(System.Int32,System.Nullable{Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sets the texture's data from native memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Upload(System.Int32,Ultraviolet.Rectangle,System.IntPtr,System.Int32)">
            <summary>
            Uploads texture data to the graphics device.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessor">
            <summary>
            Loads 3D texture assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessor.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Ultraviolet.Graphics.PlatformNativeSurface,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessor.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Ultraviolet.Graphics.PlatformNativeSurface)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor">
            <summary>
            Loads 2D texture assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.ExportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,Ultraviolet.Graphics.PlatformNativeSurface,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.ImportPreprocessed(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,Ultraviolet.Graphics.PlatformNativeSurface)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata">
            <summary>
            Contains metadata for OpenGLTexture3DProcessor.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata"/> class.
            </summary>
            <param name="premultiplyAlpha">A value indicating whether to premultiply the texture's alpha.</param>
            <param name="opaque">A value indicating whether the texture is opaque and color keying should be disabled.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata.PremultiplyAlpha">
            <summary>
            Gets or sets a value indicating whether to premultiply the texture's alpha.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata.Opaque">
            <summary>
            Gets or sets a value indicating whether the texture is opaque and color keying should be disabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3DProcessorMetadata.SrgbEncoded">
            <summary>
            Gets or sets a value indicating whether the texture is SRGB encoded. If no value is provided,
            the default specified by the <see cref="P:Ultraviolet.UltravioletContextProperties.SrgbDefaultForTexture3D"/>
            property is used.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata">
            <summary>
            Contains metadata for OpenGLTexture2DProcessor.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata"/> class.
            </summary>
            <param name="premultiplyAlpha">A value indicating whether to premultiply the texture's alpha.</param>
            <param name="opaque">A value indicating whether the texture is opaque and color keying should be disabled.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.PremultiplyAlpha">
            <summary>
            Gets or sets a value indicating whether to premultiply the texture's alpha.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.Opaque">
            <summary>
            Gets or sets a value indicating whether the texture is opaque and color keying should be disabled.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.SrgbEncoded">
            <summary>
            Gets or sets a value indicating whether the texture is SRGB encoded. If no value is provided,
            the default specified by the <see cref="P:Ultraviolet.UltravioletContextProperties.SrgbDefaultForTexture2D"/>
            property is used.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D">
            <summary>
            Represents the OpenGL implementation of the <see cref="T:Ultraviolet.Graphics.Texture3D"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.#ctor(Ultraviolet.UltravioletContext,System.Collections.Generic.IList{System.IntPtr},System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.TextureOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="data">A list of pointers to the raw pixel data for each of the texture's layers.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="bytesPerPixel">The number of bytes which represent each pixel in the raw data.</param>
            <param name="options">The texture's configuration options.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.#ctor(Ultraviolet.UltravioletContext,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.TextureOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="depth">The texture's depth in layers.</param>
            <param name="options">The texture's configuration options.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.#ctor(Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Collections.Generic.IList{System.IntPtr},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texture's texel format.</param>
            <param name="type">The texture's texel type.</param>
            <param name="data">A list of pointers to the raw pixel data for each of the texture's layers.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.#ctor(Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Collections.Generic.IList{System.IntPtr},System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D"/> class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texture's texel format.</param>
            <param name="type">The texture's texel type.</param>
            <param name="data">The texture's data.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
            <param name="rbuffer">A value indicating whether this texture is being used as a render buffer.</param>
            <returns>The instance of Texture2D that was created.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.CompareTo(Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.Resize(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetData``1(``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetRawData(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetRawData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SrgbEncoded">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.Width">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.Height">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.Depth">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.CreateConcatenatedPixelBuffer(System.Collections.Generic.IList{System.IntPtr},System.Int32)">
            <summary>
            Creates a new buffer in unmanaged memory which contains the contents of the specified buffers.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.CopyBuffer64(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Copies an unmanaged buffer into another unmanaged buffer at the specified offset.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.CopyBuffer32(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Copies an unmanaged buffer into another unmanaged buffer at the specified offset.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.CopyBuffer8(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Copies an unmanaged buffer into another unmanaged buffer at the specified offset.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.CreateNativeTexture(Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Void*,System.Boolean)">
            <summary>
            Creates the underlying native OpenGL texture with the specified format and data.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.ProcessResize">
            <summary>
            Processes a resize operation for this texture.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetDataInternal(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Object,System.Int32,System.Int32)">
            <summary>
            Sets the texture's data from managed memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.SetRawDataInternal(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sets the texture's data from native memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTexture3D.Upload(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Uploads texture data to the graphics device.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLTextureUtil">
            <summary>
            Contains utility methods for working with OpenGL textures.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTextureUtil.GetInternalFormatFromBytesPerPixel(System.Int32,System.Boolean)">
            <summary>
            Gets the OpenGL internal texture format that corresponds to the specified number of bytes per pixel.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLTextureUtil.GetFormatFromBytesPerPixel(System.Int32)">
            <summary>
            Gets the OpenGL texture format that corresponds to the specified number of bytes per pixel.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer">
            <summary>
            Represents the OpenGL implementation of the VertexBuffer class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.Graphics.VertexDeclaration,System.Int32,System.UInt32)">
            <summary>
            Initializes a new instance of the OpenGLVertexBuffer.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="vdecl">The vertex declaration for this buffer.</param>
            <param name="vcount">The number of vertices in the buffer.</param>
            <param name="usage">The buffer's usage type.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetData``1(``0[])">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetData``1(``0[],System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetRawData(System.IntPtr,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetDataAligned``1(``0[],System.Int32,System.Int32,System.Int32,System.Int32@,Ultraviolet.Graphics.SetDataOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.GetAlignmentUnit">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.GetAlignedSize(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.IsContentLost">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetDataInternal(System.Object,System.Int32,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Sets the buffer's data from native memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetRawDataInternal(System.IntPtr,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Sets the buffer's data from native memory.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.Upload(System.IntPtr,System.Int32,System.Int32,Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Uploads buffer data to the graphics device.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLVertexShader">
            <summary>
            Represents a vertex shader.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.OpenGL.Graphics.ShaderSource[])">
            <summary>
            Initializes a new instance of the OpenGLVertexShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.#ctor(Ultraviolet.UltravioletContext,Ultraviolet.OpenGL.Graphics.ShaderSource)">
            <summary>
            Initializes a new instance of the OpenGLVertexShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.OpenGLName">
            <summary>
            Gets the OpenGL shader handle.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.ShaderSourceMetadata">
            <summary>
            Gets the shader source metadata for this shader.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderImporter">
            <summary>
            Imports .vert files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderImporter.Import(Ultraviolet.Content.IContentImporterMetadata,System.IO.Stream)">
            <summary>
            Imports the data from the specified file.
            </summary>
            <param name="metadata">The asset metadata for the asset to import.</param>
            <param name="stream">The stream that contains the data to import.</param>
            <returns>The data structure that was imported from the file.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderProcessor">
            <summary>
            Loads vertex shader assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.ShaderCompiler">
            <summary>
            Contains methods for parsing and compiling shaders.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderCompiler.Compile(System.UInt32,Ultraviolet.OpenGL.Graphics.ShaderSource[],System.String@,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata@)">
            <summary>
            Compiles the specified shader.
            </summary>
            <param name="shader">The shader handle.</param>
            <param name="source">The shader source.</param>
            <param name="log">The compiler log.</param>
            <param name="ssmd">The source metadata for this shader.</param>
            <returns>true if the shader compiled; otherwise, false.</returns>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.ShaderSource">
            <summary>
            Represents shader source code after processing has been performed.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.#ctor(System.String,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> class.
            </summary>
            <param name="source">The source code for this shader.</param>
            <param name="metadata">The metadata for this shader.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessRawSource(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <summary>
            Processes raw shader source into a new <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> object.
            </summary>
            <param name="manager">The <see cref="T:Ultraviolet.Content.ContentManager"/> that is loading the shader source.</param>
            <param name="metadata">The content processor metadata for the shader source that is being loaded.</param>
            <param name="source">The raw shader source to process.</param>
            <returns>A <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> object that represents the processed shader source.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessExterns(Ultraviolet.OpenGL.Graphics.ShaderSource,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Processes a <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> instance to produce a new <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> instance
            with expanded #extern definitions.
            </summary>
            <param name="source">The source instance to process.</param>
            <param name="externs">The collection of defined extern values.</param>
            <returns>A new <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> instance with expanded #extern definitions.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.op_Implicit(System.String)~Ultraviolet.OpenGL.Graphics.ShaderSource">
            <summary>
            Implicitly converts a <see cref="T:System.String"/> object to a new <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> instance.
            </summary>
            <param name="source">The underlying source string of the <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> object to create.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.ShaderSource.Source">
            <summary>
            Gets the processed shader source.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.ShaderSource.Metadata">
            <summary>
            Gets the metadata for this shader.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessInternal(Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata,System.String,System.Func{System.String,System.Text.StringBuilder,System.Boolean})">
            <summary>
            Performs line-by-line processing of raw shader source code.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.TrackComments(System.String,System.Boolean@)">
            <summary>
            Parses a line of GLSL for comments and keeps track of whether we're
            currently inside of one that spans multiple lines.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessExternDirective(System.String,System.Text.StringBuilder,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Processes #extern directives.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessIncludeDirective(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String,System.Text.StringBuilder,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Processes #include directives.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessIncludeResourceDirective(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String,System.Text.StringBuilder,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Processes #includeres directives.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessIfVerDirective(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String,System.Text.StringBuilder,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Processes #ifver directives.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessSamplerDirective(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String,System.Text.StringBuilder,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Processes #sampler directives.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSource.ProcessParamDirective(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String,System.Text.StringBuilder,Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Processes #param directives.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata">
            <summary>
            Contains metadata associated with a <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSource"/> instance.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata.Concat(Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata)">
            <summary>
            Adds the contents of the specified <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata"/> instance to this instance.
            </summary>
            <param name="ssmd">The <see cref="T:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata"/> instance to concatenate to this instance.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata.AddPreferredSamplerIndex(System.String,System.Int32)">
            <summary>
            Adds a preferred sampler index to this instance's list.
            </summary>
            <param name="uniform">The uniform for which to specify a preferred sampler index.</param>
            <param name="sampler">The index of the preferred sampler for the specified uniform.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata.AddParameterHint(System.String)">
            <summary>
            Adds a parameter hint to this instance's list.
            </summary>
            <param name="parameter">The name of the effect parameter that should be created.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata.PreferredSamplerIndices">
            <summary>
            Gets a dictionary which associates uniforms with their preferred sampler indices.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.Graphics.ShaderSourceMetadata.ParameterHints">
            <summary>
            Gets a set which contains the list of specified parameter names for this shader.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.Graphics.ShaderSourceProcessor">
            <summary>
            Loads shader source assets.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.Graphics.ShaderSourceProcessor.Process(Ultraviolet.Content.ContentManager,Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.OpenGLInitializer">
            <summary>
            Represents an object capable of querying the OpenGL driver for information 
            required by Ultraviolet's OpenGL initialization process.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLInitializer.Prepare">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLInitializer.Cleanup">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLInitializer.GetProcAddress(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.OpenGLStrings">
            <summary>
            Contains the implementation's string resources.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLStrings.#cctor">
            <summary>
            Initializes the OpenGLStrings type.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration">
            <summary>
            Represents the Ultraviolet Framework's configuration settings under the OpenGL implementation.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MinimumOpenGLVersion">
            <summary>
            Gets or sets the minimum OpenGL version that is required by the application.
            This cannot be lower than the minimum version required by Ultraviolet itself.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MinimumOpenGLESVersion">
            <summary>
            Gets or sets the minimum OpenGL ES version that is required by the application.
            This cannot be lower than the minimum version required by Ultraviolet itself.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.BackBufferDepthSize">
            <summary>
            Gets or sets the minimum number of bits in the depth buffer.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.BackBufferStencilSize">
            <summary>
            Gets or sets the minimum number of bits in the stencil buffer.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MultiSampleBuffers">
            <summary>
            Gets the number of buffers used for multisample anti-aliasing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MultiSampleSamples">
            <summary>
            Gets the number of samples around the current pixel used for multisample anti-aliasing.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.IsHardwareInputDisabled">
            <summary>
            Gets or sets a value indicating whether the context will disable hardware input by default.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.Use32BitFramebuffer">
            <summary>
            Gets or sets a value indicating whether the default framebuffer should be 32-bit (if <see langword="true"/>)
            or 16-bit (if <see langword="false"/>). 
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.UseBufferMapping">
            <summary>
            Gets or sets a value indicating whether Ultraviolet should attempt to use buffer mapping when
            rendering geometry, if it is available on the current driver.
            </summary>
        </member>
        <member name="F:Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.Default">
            <summary>
            The default configuration for the OpenGL implementation.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.OpenGLUltravioletContext">
            <summary>
            Represents the OpenGL implementation of the Ultraviolet context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.#ctor(Ultraviolet.IUltravioletHost)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletContext class.
            </summary>
            <param name="host">The object that is hosting the Ultraviolet context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.#ctor(Ultraviolet.IUltravioletHost,Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletContext class.
            </summary>
            <param name="host">The object that is hosting the Ultraviolet context.</param>
            <param name="configuration">The Ultraviolet Framework configuration settings for this context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.Update(Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.Draw(Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.GetPlatform">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.GetContent">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.GetGraphics">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.GetAudio">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.GetInput">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.GetUI">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletContext.AudioSubsystemAssembly">
            <summary>
            Gets the assembly that implements the audio subsystem.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.InitializeAudioSubsystem(Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes the context's audio subsystem.
            </summary>
            <param name="configuration">The Ultraviolet Framework configuration settings for this context.</param>
            <returns>The audio subsystem.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.InitOpenGLVersion(Ultraviolet.OpenGL.OpenGLUltravioletConfiguration,System.Version@,System.Version@,System.Boolean@)">
            <summary>
            Determines which version of OpenGL will be used by the context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletContext.InitOpenGLAttributes(Ultraviolet.OpenGL.OpenGLUltravioletConfiguration,System.Version,System.Version,System.Boolean)">
            <summary>
            Sets the SDL2 attributes which correspond to the application's OpenGL settings.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.OpenGLUltravioletGraphics">
            <summary>
            Represents the OpenGL implementation of the Ultraviolet Graphics subsystem.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.#ctor(Ultraviolet.OpenGL.OpenGLUltravioletContext,Ultraviolet.OpenGL.OpenGLUltravioletConfiguration,System.Version,System.Version)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletGraphics class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="configuration">The Ultraviolet Framework configuration settings for the current context.</param>
            <param name="versionRequested">The OpenGL context version which is requested by the application.</param>
            <param name="versionRequired">The OpenGL context version which is required by the Ultraviolet Framework.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Update(Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Clear(Ultraviolet.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Clear(Ultraviolet.Color,System.Double,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Clear(Ultraviolet.ClearOptions,Ultraviolet.Color,System.Double,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTarget(Ultraviolet.Graphics.RenderTarget2D)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTarget(Ultraviolet.Graphics.RenderTarget2D,Ultraviolet.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTarget(Ultraviolet.Graphics.RenderTarget2D,Ultraviolet.Color,System.Double,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTargetToBackBuffer">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTargetToBackBuffer(Ultraviolet.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTargetToBackBuffer(Ultraviolet.Color,System.Double,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetRenderTarget">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetViewport(Ultraviolet.Graphics.Viewport)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetViewport">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UnbindTexture(Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UnbindTextures(System.Object,System.Func{Ultraviolet.Graphics.Texture,System.Object,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UnbindTextures(System.Object,System.Func{Ultraviolet.Graphics.Texture2D,System.Object,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UnbindTextures(System.Object,System.Func{Ultraviolet.Graphics.Texture3D,System.Object,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UnbindAllTextures">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetTexture(System.Int32,Ultraviolet.Graphics.Texture)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetTexture(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetGeometryStream(Ultraviolet.Graphics.GeometryStream)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetGeometryStream">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetBlendState(Ultraviolet.Graphics.BlendState)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetBlendState">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetDepthStencilState(Ultraviolet.Graphics.DepthStencilState)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetDepthStencilState">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRasterizerState(Ultraviolet.Graphics.RasterizerState)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetRasterizerState">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetSamplerState(System.Int32,Ultraviolet.Graphics.SamplerState)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetSamplerState(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetScissorRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetScissorRectangle(System.Nullable{Ultraviolet.Rectangle})">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetScissorRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawIndexedPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawIndexedPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawInstancedPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawInstancedPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawInstancedPrimitives(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UpdateFrameCount">
            <summary>
            Updates the graphics device's frame count.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UpdateFrameRate(Ultraviolet.UltravioletTime)">
            <summary>
            Updates the graphics device's calculated frame rate.
            </summary>
            <param name="time">Time elapsed since the last update.</param>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.FrameRate">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Capabilities">
            <inheritdoc/>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.CurrentRenderTargetIsSrgbEncoded">
            <inheritdoc/>
        </member>
        <member name="E:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Updating">
            <summary>
            Occurs when the subsystem is updating its state.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.ResetDeviceStates">
            <summary>
            Resets the device states to their initial values.
            </summary>
        </member>
        <member name="P:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.OpenGLContext">
            <summary>
            Gets the OpenGL context.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.VerifyCapabilities">
            <summary>
            Verifies that the graphics device supports all of the functionality required by Ultraviolet.
            </summary>
            <returns>true if the graphics device is supported; otherwise, false.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetIndexFormatGL(Ultraviolet.Graphics.IndexBufferElementType,System.Int32@)">
            <summary>
            Gets the OpenGL index element format that corresponds to the specified Ultraviolet index element type.
            </summary>
            <param name="type">The index element type to convert.</param>
            <param name="size">The index element size in bytes.</param>
            <returns>The converted index element format.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetPrimitiveTypeGL(Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32@)">
            <summary>
            Gets the OpenGL primitive type that corresponds to the specified Ultraviolet primitive type.
            </summary>
            <param name="type">The primitive type to convert.</param>
            <param name="count">The number of polygons to render.</param>
            <param name="vertices">The number of vertices to render.</param>
            <returns>The converted primitive type.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DebugCallbackThunk(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Represents a thunk which allows the native OpenGL driver to call into the managed debug callback.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.TryInitializeGLContext(System.IntPtr,Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Attempts to initialize the OpenGL context with the specified configuration.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.InitializeDebugOutput(Ultraviolet.UltravioletConfiguration)">
            <summary>
            Initializes debug output for this context.
            </summary>
            <param name="configuration">The Ultraviolet Framework configuration settings for the current context.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.OnUpdating(Ultraviolet.UltravioletTime)">
            <summary>
            Raises the Updating event.
            </summary>
            <param name="time">Time elapsed since the last call to Update.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.ConvertScreenRegionUvToGL(System.Int32@,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Converts an Ultraviolet screen region to OpenGL coordinates.
            </summary>
            <param name="x">The x-coordinate of the region to convert.</param>
            <param name="y">The y-coordinate of the region to convert.</param>
            <param name="width">The width of the region to convert.</param>
            <param name="height">The height of the region to convert.</param>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTargetInternal(Ultraviolet.Graphics.RenderTarget2D,System.Nullable{Ultraviolet.Color},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            Sets the current render target.
            </summary>
        </member>
        <member name="T:Ultraviolet.OpenGL.OpenGLUltravioletGraphicsFactoryInitializer">
            <summary>
            Initializes factory methods for the OpenGL implementation of the graphics subsystem.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.OpenGLUltravioletGraphicsFactoryInitializer.Initialize(Ultraviolet.UltravioletContext,Ultraviolet.UltravioletFactory)">
            <inheritdoc/>
        </member>
        <member name="T:Ultraviolet.OpenGL.ResourceUtil">
            <summary>
            Contains utility methods for accessing the library's resource files.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.ResourceUtil.#cctor">
            <summary>
            Initializes the <see cref="T:Ultraviolet.OpenGL.ResourceUtil"/> class.
            </summary>
        </member>
        <member name="M:Ultraviolet.OpenGL.ResourceUtil.ReadResourceString(System.String)">
            <summary>
            Reads a resource file as a string of text.
            </summary>
            <param name="name">The name of the file to read.</param>
            <returns>A string of text that contains the file data.</returns>
        </member>
        <member name="M:Ultraviolet.OpenGL.ResourceUtil.ReadShaderResourceString(System.String)">
            <summary>
            Reads a resource file containing a shader program's source code.
            </summary>
            <param name="name">The name of the file to read.</param>
            <returns>A string of text that contains the file data.</returns>
        </member>
    </members>
</doc>
